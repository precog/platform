server {
  port = ${installer:shard_port}
  sslPort = 30071
  sslEnable = false

  log {
    level = "info"
    console = true
    filename = "shard-v1.server.log"
    roll = "daily"
    use_parents = false
  }
}

zookeeper {
  port = "${installer:zookeeper_port}"
  dataDir = "${installer:zookeeper_dir}"
}

kafka {
    brokerid = "0"
    port = "${installer:kafka_port}"
    log.dir = "${installer:kafka_dir}"
}

services {
  quirrel {
    v1 {
      log {
        level = "debug"
        console = true
        filename = "${installer:log_dir}${installer:sys.fileSeparator}shard-v1.log"
        roll = "daily"
        use_parents = false
      }

      requestLog {
        enabled = false
        file = "${installer:log_dir}${installer:sys.fileSeparator}shard-v1.request.log"
        roll = "daily"
        fields = "date time c-ip cs-method cs-uri-stem cs-uri-query sc-status cs-content"
        formatter = "w3cs"
        excludePaths = ["/blueeyes/services/quirrel/v1/health"]
      }

      labcoat {
        port = ${installer:labcoat_port}
      }

      queryExecutor {
        systemId = desktop
        precog {
          storage {
            root = "${installer:data_dir}"
          }
          kafka {
            enabled = true
            topic {
              events = central_event_store
            }
            consumer {
              zk {
                connect = localhost:${installer:zookeeper_port}
                connectiontimeout {
                  ms = 1000000
                }
              }
              groupid = shard_consumer
            }
          }
        }
        ingest {
          enabled = true
          failure_log_root ="${installer:log_dir}${installer:sys.fileSeparator}ingest_failures"
          createCheckpointFlag = absolutely
        }
        kafka {
          batch {
            host = localhost
            port = ${installer:kafka_port}
            topic = central_event_store
          }
        }
        zookeeper {
          hosts = localhost:${installer:zookeeper_port}
        }
      }

      security {
        masterAccount {
          apiKey = "12345678-1234-1234-1234-123456789abc"
          accountId = "desktop"
        }
      }

      accounts {
        service {
          static_account = "desktop"
        }
      }

      jobs {
      }

      eventStore {
        systemId = "desktop"
        local {
          topic = "local_event_cache"
          broker {
            host = "localhost"
            port = ${installer:kafka_port}
          }
          serializer.class = "com.precog.common.kafka.KafkaIngestMessageCodec"
        }
        central {
          topic = "central_event_store"
          broker {
            host = "localhost"
            port = ${installer:kafka_port}
          }
          zk {
            connect = localhost:${installer:zookeeper_port}
          }
          serializer.class = "com.precog.common.kafka.KafkaIngestMessageCodec"
        }
      }
    }
  }

  ingest {
    v1 {
      log {
        level = "debug"
        console = true
        filename = "${installer:log_dir}${installer:sys.fileSeparator}ingest-v1.log"
        roll = "daily"
        use_parents = false
      }

      requestLog {
        enabled = false
        file = "${installer:log_dir}${installer:sys.fileSeparator}ingest-v1.request.log"
        roll = "daily"
        fields = "date time c-ip cs-method cs-uri-stem cs-uri-query sc-status cs-content"
        formatter = "w3cs"
        excludePaths = "/blueeyes/services/ingest/v1/health"
      }

      eventStore {
        systemId = "desktop"
        local {
          topic = "local_event_cache"
          broker {
            host = "localhost"
            port = ${installer:kafka_port}
          }
          serializer.class = "com.precog.common.kafka.KafkaIngestMessageCodec"
        }
        central {
          topic = "central_event_store"
          broker {
            host = "localhost"
            port = ${installer:kafka_port}
          }
          zk {
            connect = localhost:${installer:zookeeper_port}
          }
          serializer.class = "com.precog.common.kafka.KafkaIngestMessageCodec"
        }
      }

      security {
        masterAccount {
          apiKey = "12345678-1234-1234-1234-123456789abc"
          accountId = "desktop"
        }
      }
    }
  }
}
